{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Fweet.js","components/FweetBoard.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Fweet","fweetObj","isOwner","editing","setEditing","text","newFweet","setNewFweet","onDeleteClick","window","confirm","doc","id","delete","fileUrl","refFromURL","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","FweetBoard","userObj","fweet","setFweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","fweets","setFweets","useEffect","onSnapshot","snapshot","fweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","myFweets","setMyFweets","history","useHistory","newDisplayName","setNewDisplayName","getMyFweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b29b8cfe.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport \"../styles/AuthFormStyle.css\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n        // create account\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n        // log in\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","/*\nUsing Firebase to Authenticate user.\nCreate account, log in. \npersistence \n*/\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport \"../styles/AuthStyle.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    //console.log(data);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../style.css\";\nimport \"../styles/FweetStyle.css\";\n\nconst Fweet = ({ fweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newFweet, setNewFweet] = useState(fweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this fweet?\");\n    if (ok) {\n      await dbService.doc(`fweets/${fweetObj.id}`).delete();\n      if (fweetObj.fileUrl !== \"\") {\n        await storageService.refFromURL(fweetObj.fileUrl).delete();\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(fweetObj, newFweet);\n    await dbService.doc(`fweets/${fweetObj.id}`).update({\n      text: newFweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewFweet(value);\n  };\n\n  return (\n    <div className=\"fweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container fweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your fweet\"\n              value={newFweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{fweetObj.text}</h4>\n          {fweetObj.fileUrl && (\n            <img src={fweetObj.fileUrl} alt={fweetObj.fileUrl} />\n          )}\n          {isOwner && (\n            <div className=\"fweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Fweet;\n\n","import React, { useState } from \"react\";\nimport { storageService, dbService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../styles/FweetBoardStyle.css\";\n\nconst FweetBoard = ({ userObj }) => {\n  const [fweet, setFweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let fileUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await fileRef.putString(attachment, \"data_url\");\n      fileUrl = await response.ref.getDownloadURL();\n    }\n    const fweetObj = {\n      text: fweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      fileUrl,\n    };\n    await dbService.collection(\"fweets\").add(fweetObj);\n    setFweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setFweet(value);\n    setAttachment(\"\");\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearPhoto = () => {\n    setAttachment(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"boardForm\">\n      <div className=\"boardInput__container\">\n        <input\n          className=\"boardInput__input\"\n          value={fweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"boardInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"boardInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"boardForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt={attachment}\n          />\n          <div className=\"boardForm__clear\" onClick={onClearPhoto}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default FweetBoard;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"fbase\";\nimport Fweet from \"components/Fweet\";\nimport FweetBoard from \"components/FweetBoard\";\nimport \"../style.css\";\n\nconst Home = ({ userObj }) => {\n  const [fweets, setFweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"fweets\").onSnapshot((snapshot) => {\n      const fweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setFweets(fweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <FweetBoard userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {fweets.map((fweet) => (\n          <Fweet\n            key={fweet.id}\n            fweetObj={fweet}\n            isOwner={fweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n      <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n      <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}'s Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router\";\nimport Fweet from \"components/Fweet\";\nimport \"../styles/Profile.css\";\n\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const [myFweets, setMyFweets] = useState([]);\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const signOut = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const getMyFweets = async () => {\n    const fweets = await dbService\n      .collection(\"fweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    setMyFweets(\n      fweets.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }))\n    );\n    //console.log(fweets.docs.map((doc) => doc.data()));\n  };\n  useEffect(() => {\n    getMyFweets();\n  }, []);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <div>\n        {myFweets.map((fweet) => (\n          <Fweet\n            key={fweet.id}\n            fweetObj={fweet}\n            isOwner={fweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n      <span className=\"formBtn cancelBtn logOut\" onClick={signOut}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        <div\n          style={{\n            maxWidth: 890,\n            width: \"100%\",\n            margin: \"0 auto\",\n            marginTop: 80,\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Route exact path=\"/\">\n            {isLoggedIn ? <Home userObj={userObj} /> : <Auth />}\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile userObj={userObj} refreshUser={refreshUser} />\n          </Route>\n        </div>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport \"../style.css\"\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  //check if it is logged in\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={userObj}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Fwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App'\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}